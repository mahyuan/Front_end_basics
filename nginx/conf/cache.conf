# 配置在 http 下面
upstream test_cache {
  server 127.0.0.1:8001;
  server 127.0.0.1:8002;
  server 127.0.0.1:8003;
}

proxy_cache_path /opt/nginx/cache levels=1:2 keys_zone=test_cache:10m max_size=10g inactive=60m use_temp_path=off;
# levels=1:2 安按照两层目录来分级，keys_zone 开辟空间的名字，后面是大小 max_size：最大的容量，满了之后会触发淘汰规则，删除不常用的，inactive=60m, 60分钟没有用的会删除
server {
  listen 80;
  server_name localhost;
  access_log /var/log/nginx/nginx_proxy_cache.access.log main;

  if ($request_uri ~ ^/(url3|login|register|password\/reset)) {
    set $cookie_nocache 1;
  }

  location / {
    # proxy_cache off;
    proxy_cache test_cache;  # keys_zone
    proxy_pass http://test_cache;
    proxy_cache_valid 200 304 12h;
    proxy_cache_valid any 10m;
    proxy_cache_key $host$uri$is_args$args;

    proxy_no_cache $cookie_nocache $arg_nocache $arg_comment;
    proxy_no_cache $http_pragma $http_authorization;

    add_header Nginx-Cache "$upstream_cache_status"; # zresponse增加头信息

    # 负载均衡中某台服务器有问题时自动访问另一台机器
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    include /mnt/d/work/private/Front_end_basics/nginx/conf/proxy_params;
  }
}
